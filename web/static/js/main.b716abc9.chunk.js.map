{"version":3,"sources":["pages/main/main.js","pages/copyright/copyright.js","pages/login/login.js","components/documento.js","services/api.js","components/select-rest.js","pages/cadastro/cadastro.js","serviceWorker.js","index.js","RouterPage.js"],"names":["Main","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","body","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","secondary","main","form","width","submit","Login","classes","Container","component","maxWidth","CssBaseline","className","Avatar","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","type","FormControlLabel","control","Checkbox","value","Button","Grid","container","item","xs","to","Box","mt","Documento","props","formatWithPattern","numStr","format","returnValue","arrFormat","split","count","i","length","join","formatDocumento","val","replace","customInput","this","documento","error","onChange","React","Component","api","axios","create","headers","SelectRest","componentDidMount","me","setState","labelWidth","current","clientWidth","get","data","then","result","handleChange","event","target","createRef","state","InputLabel","ref","Select","labelId","inputRef","map","MenuItem","key","descricao","Cadastro","useState","estabelecimento","nome","email","senha","mensagemestabelecimento","mensagemnome","mensagemdocumento","mensagememail","mensagemsenha","setError","fieldError","mensagem","onSubmit","preventDefault","console","log","FormControl","FormHelperText","disabled","Boolean","window","location","hostname","match","ReactDOM","render","fakeAuth","isAuthenticated","path","children","rest","pathname","from","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sLAIe,SAASA,IAEpB,OACA,8B,+HCHW,SAASC,IAEpB,OACI,kBAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,MAAM,UACnD,kBACD,kBAACC,EAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,4BAA3B,eAEE,KACD,IAAIC,MAAOC,cACX,KCGb,IAAMC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnC,UAAW,CACPC,KAAM,CACFC,gBAAiBF,EAAMG,QAAQC,OAAOC,QAG9CC,MAAO,CACHC,UAAWP,EAAMQ,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,OAAQ,CACJC,OAAQb,EAAMQ,QAAQ,GACtBN,gBAAiBF,EAAMG,QAAQW,UAAUC,MAE7CC,KAAM,CACFC,MAAO,OACPV,UAAWP,EAAMQ,QAAQ,IAE7BU,OAAQ,CACJL,OAAQb,EAAMQ,QAAQ,EAAG,EAAG,QAIrB,SAASW,IACpB,IAAMC,EAAUtB,IAEhB,OACI,kBAACuB,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,MACjC,kBAACC,EAAA,EAAD,MACA,yBAAKC,UAAWL,EAAQd,OACpB,kBAACoB,EAAA,EAAD,CAAQD,UAAWL,EAAQR,QACvB,kBAAC,IAAD,OAEJ,kBAACtB,EAAA,EAAD,CAAYgC,UAAU,KAAK/B,QAAQ,MAAnC,sBAGA,0BAAMkC,UAAWL,EAAQJ,KAAMW,YAAU,GACrC,kBAACC,EAAA,EAAD,CACIrC,QAAQ,WACRsB,OAAO,SACPgB,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,QACNC,KAAK,QACLC,aAAa,QACbC,WAAS,IAEb,kBAACP,EAAA,EAAD,CACIrC,QAAQ,WACRsB,OAAO,SACPgB,UAAQ,EACRC,WAAS,EACTG,KAAK,WACLD,MAAM,QACNI,KAAK,WACLL,GAAG,WACHG,aAAa,qBAEjB,kBAACG,EAAA,EAAD,CACIC,QAAS,kBAACC,EAAA,EAAD,CAAUC,MAAM,WAAWhD,MAAM,YAC1CwC,MAAM,eAEV,kBAACS,EAAA,EAAD,CACIL,KAAK,SACLN,WAAS,EACTvC,QAAQ,YACRC,MAAM,UACNiC,UAAWL,EAAQF,QALvB,SASA,kBAACwB,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,GACT,kBAAC,IAAD,CAAMC,GAAG,mBAAT,sBAEJ,kBAACJ,EAAA,EAAD,CAAME,MAAI,GACN,kBAAC,IAAD,CAAME,GAAG,aAAT,uCAKhB,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACL,kBAAC3D,EAAD,Q,6ECjGK4D,E,YAEjB,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAKVC,kBAAoB,SAACC,EAAQC,GAKzB,IAHA,IAAIC,EAAc,GACdC,EAAYF,EAAOG,MAAM,IACzBC,EAAQ,EACHC,EAAI,EAAGA,EAAIH,EAAUI,SAEL,MAAjBJ,EAAUG,IAEVJ,EAAYI,GAAKN,EAAOK,GACxBA,KAEAH,EAAYI,GAAKL,EAAOK,GAGxBD,IAAUL,EAAOO,QAVaD,KAetC,OAAOJ,EAAYM,KAAK,KA1BT,EA6BnBC,gBAAkB,SAACC,GAEf,IAAItB,EAAQsB,EAAIC,QAAQ,SAAU,IAElC,OAAIvB,EAAMmB,OAAS,GAER,EAAKR,kBAAkBX,EAAO,sBAGlC,EAAKW,kBAAkBX,EAAO,mBAnCrC,EAAKP,KAAOiB,EAAMjB,KAHH,E,sEA2Cf,OACI,kBAAC,IAAD,CACI+B,YAAapC,IACbyB,OAAQY,KAAKJ,gBACbtE,QAAQ,WACRsC,UAAQ,EACRC,WAAS,EACTU,MAAOyB,KAAKf,MAAMgB,UAClBC,MAAOF,KAAKf,MAAMiB,MAClBC,SAAUH,KAAKf,MAAMkB,SACrBrC,GAAG,YACHC,MAAM,WACNC,KAAK,YACLC,aAAa,kB,GA1DUmC,IAAMC,W,oDCM9BC,E,OAPHC,EAAMC,OAAO,CAErBC,QAAS,CAAE,eAAgB,sBCCVC,E,YAEjB,WAAYzB,GAAQ,IAAD,8BACf,4CAAMA,KAWV0B,kBAAoB,WAEhB,IAAIC,EAAE,eAEN,EAAKC,SAAS,CAAEC,WAAY,EAAK/C,MAAMgD,QAAQC,cAE/CV,EAAIW,IAAI,EAAKhC,MAAMqB,IAAK,CAAEY,KAAM,KAAMC,MAAK,SAAAC,GAAYR,EAAGC,SAAS,CAAEK,KAAME,EAAOF,WAlBnE,EAqBnBG,aAAe,SAACC,GACZ,EAAKT,SAAS,CAAEtC,MAAO+C,EAAMC,OAAOhD,QAEpC,EAAKU,MAAMoC,aAAaC,IArBxB,EAAKvD,MAAQqC,IAAMoB,YAEnB,EAAKC,MAAQ,CACTP,KAAM,GACNJ,WAAY,IACZvC,MAAO,IARI,E,sEA6Bf,OACI,6BACI,kBAACmD,EAAA,EAAD,CAAY5D,GAAIkC,KAAKf,MAAMjB,KAAO,QAAS2D,IAAK3B,KAAKjC,OAChDiC,KAAKf,MAAMlB,OAEhB,kBAAC6D,EAAA,EAAD,CACIpE,UAAU,cACVqE,QAAS7B,KAAKf,MAAMjB,KAAO,QAC3BF,GAAIkC,KAAKf,MAAMjB,KAAO,QACtBJ,UAAQ,EACRC,WAAS,EACTiE,SAAU9B,KAAKf,MAAM6C,SACrB5B,MAAOF,KAAKf,MAAMiB,MAClB3B,MAAOyB,KAAKyB,MAAMlD,MAClBuC,WAAYd,KAAKyB,MAAMX,WACvBX,SAAUH,KAAKqB,cAGXrB,KAAKyB,MAAMP,KAAKa,KAAI,SAAUpD,GAC1B,OAAQ,kBAACqD,EAAA,EAAD,CAAUC,IAAKtD,EAAKb,GAAIS,MAAOI,EAAKb,IAAKa,EAAKuD,oB,GAlD1C9B,IAAMC,W,yjBCY9C,IAAMxE,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrC,UAAW,CACTC,KAAM,CACJC,gBAAiBF,EAAMG,QAAQC,OAAOC,QAG1CC,MAAO,CACLC,UAAWP,EAAMQ,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNC,OAAQb,EAAMQ,QAAQ,GACtBN,gBAAiBF,EAAMG,QAAQW,UAAUC,MAE3CC,KAAM,CACJC,MAAO,OACPV,UAAWP,EAAMQ,QAAQ,IAE3BU,OAAQ,CACNL,OAAQb,EAAMQ,QAAQ,EAAG,EAAG,QAKjB,SAAS4F,IAAY,IAAD,EAEP/B,IAAMgC,SAAS,CACvCC,gBAAiB,GACjBC,KAAM,GACNrC,UAAW,GACXsC,MAAO,GACPC,MAAO,KAPwB,mBAE1Bf,EAF0B,KAEnBZ,EAFmB,OAUPT,IAAMgC,SAAS,CACvCC,iBAAiB,EACjBC,MAAM,EACNrC,WAAW,EACXsC,OAAO,EACPC,OAAO,EACPC,wBAAyB,uBACzBC,aAAc,uBACdC,kBAAmB,uBACnBC,cAAe,uBACfC,cAAe,yBApBgB,mBAU1B3C,EAV0B,KAUnB4C,EAVmB,KAwB3B3F,EAAUtB,IAchB,SAASwF,EAAarD,EAAMO,EAAOwE,EAAYC,GAAW,IAAD,EAEvDnC,EAAS,EAAD,GACHY,EADG,eAELzD,EAAOO,KAGVuE,EAAS,EAAD,GACH5C,GADG,mBAELlC,EAAO+E,GAFF,cAGL,WAAa/E,EAAOgF,GAHf,KAyCV,OAEE,kBAAC5F,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,MACnC,kBAACC,EAAA,EAAD,MACA,yBAAKC,UAAWL,EAAQd,OACtB,kBAACoB,EAAA,EAAD,CAAQD,UAAWL,EAAQR,QACzB,kBAAC,IAAD,OAEF,kBAACtB,EAAA,EAAD,CAAYgC,UAAU,KAAK/B,QAAQ,MAAnC,uBAGA,kBAACmD,EAAA,EAAD,CAAMC,WAAS,EAACnC,QAAS,GACvB,0BAAMiB,UAAWL,EAAQJ,KAAMW,YAAU,EAACuF,SAxE7B,SAAA3B,GAEnBA,EAAM4B,iBACNC,QAAQC,IAAI9B,KAsEJ,kBAAC+B,EAAA,EAAD,CAAa/H,QAAQ,WAAWkC,UAAWL,EAAQJ,MACjD,kBAAC0B,EAAA,EAAD,CAAMC,WAAS,EAACnC,QAAS,GACvB,kBAACkC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAAC,EAAD,CACEZ,KAAK,kBACLD,MAAM,kBACNQ,MAAOkD,EAAMY,gBACbnC,MAAOA,EAAMmC,gBACbhB,aAvDY,SAAAC,GAE5B,IAAIpB,EAA+B,KAAvBoB,EAAMC,OAAOhD,MACrByE,EAAW9C,EAAQ,uBAAsB,GAE7CmB,EAAa,kBAAmBC,EAAMC,OAAOhD,MAAO2B,EAAO8C,IAmD3C1C,IAAI,oBAELJ,EAAMmC,iBAAmB,kBAACiB,EAAA,EAAD,KAAiBpD,EAAMuC,0BAEnD,kBAAChE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAAC,EAAD,CACEL,MAAOkD,EAAMxB,UACbC,MAAOA,EAAMD,UACbE,SAxDM,SAAAmB,GACtB,IAAIpB,EAA+B,KAAvBoB,EAAMC,OAAOhD,MACrByE,EAAW9C,EAAQ,uBAAsB,GAE7CmB,EAAa,YAAaC,EAAMC,OAAOhD,MAAO2B,EAAO8C,MAsDtC9C,EAAMD,WAAa,kBAACqD,EAAA,EAAD,KAAiBpD,EAAMyC,oBAE7C,kBAAClE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjB,EAAA,EAAD,CACErC,QAAQ,WACR0C,KAAK,OACLJ,UAAQ,EACRC,WAAS,EACTC,GAAG,OACHC,MAAM,OACNE,aAAa,OACbM,MAAOkD,EAAMa,KACbpC,MAAOA,EAAMoC,KACbnC,SAhEC,SAAAmB,GACjB,IAAIpB,EAA+B,KAAvBoB,EAAMC,OAAOhD,MACrByE,EAAW9C,EAAQ,uBAAsB,GAE7CmB,EAAa,OAAQC,EAAMC,OAAOhD,MAAO2B,EAAO8C,MA8DjC9C,EAAMoC,MAAQ,kBAACgB,EAAA,EAAD,KAAiBpD,EAAMwC,eAExC,kBAACjE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjB,EAAA,EAAD,CACErC,QAAQ,WACRsC,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,QACNC,KAAK,QACLC,aAAa,QACbM,MAAOkD,EAAMc,MACbrC,MAAOA,EAAMqC,MACbpC,SAzEE,SAAAmB,GAClB,IAAIpB,EAA+B,KAAvBoB,EAAMC,OAAOhD,MACrByE,EAAW9C,EAAQ,uBAAsB,GAE7CmB,EAAa,QAASC,EAAMC,OAAOhD,MAAO2B,EAAO8C,MAuElC9C,EAAMqC,OAAS,kBAACe,EAAA,EAAD,KAAiBpD,EAAM0C,gBAEzC,kBAACnE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjB,EAAA,EAAD,CACErC,QAAQ,WACRsC,UAAQ,EACRC,WAAS,EACTG,KAAK,QACLD,MAAM,QACNI,KAAK,WACLL,GAAG,QACHG,aAAa,mBACbM,MAAOkD,EAAMe,MACbtC,MAAOA,EAAMsC,MACbrC,SAnFE,SAAAmB,GAClB,IAAIpB,EAA+B,KAAvBoB,EAAMC,OAAOhD,MACrByE,EAAW9C,EAAQ,uBAAsB,GAE7CmB,EAAa,QAASC,EAAMC,OAAOhD,MAAO2B,EAAO8C,MAiFlC9C,EAAMsC,OAAS,kBAACc,EAAA,EAAD,KAAiBpD,EAAM2C,iBAG3C,kBAACrE,EAAA,EAAD,CACEL,KAAK,SACLN,WAAS,EACTvC,QAAQ,YACRC,MAAM,UACNgI,SAAWrD,EAAMmC,iBAAmBnC,EAAMoC,MAAQpC,EAAMD,WAAaC,EAAMqC,OAASrC,EAAMsC,MAC1FhF,UAAWL,EAAQF,QANrB,kBCvMMuG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,mBCOD,WAEX,IAAMC,EAAW,CACbC,iBAAiB,GAuBrB,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,UACR,kBAAC/G,EAAD,OAEJ,kBAAC,IAAD,CAAO+G,KAAK,aACR,kBAAC9B,EAAD,OAEJ,kBAAC,IAAD,CAAO8B,KAAK,cACR,kBAAC9I,EAAD,OAEJ,mBAhCZ,YAA6C,EAArB+I,SAAsB,IAATC,EAAQ,4BACzC,OACI,kBAAC,IAAD,iBAAWA,EAAX,CAAiBL,OAAQ,YAAmB,IAAhBJ,EAAe,EAAfA,SACxB,OAAOK,EAASC,gBACZ,kBAAC,IAAD,CAAUnF,GAAI,CACVuF,SAAU,aACV3C,MAAO,CAAE4C,KAAMX,MAGf,kBAAC,IAAD,CAAU7E,GAAI,CACVuF,SAAU,SACV3C,MAAO,CAAE4C,KAAMX,YAqB3B,CAAcO,KAAK,UD7CnB,MAAgBK,SAASC,eAAe,SD2HlD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvD,MAAK,SAAAwD,GACjCA,EAAaC,iB","file":"static/js/main.b716abc9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\n\r\nexport default function Main() {\r\n\r\n    return (\r\n    <div>\r\n     \r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nexport default function Copyright() {\r\n\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright Â© '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Agenda Aqui\r\n      </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { Link } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Copyright from '../copyright/copyright';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    '@global': {\r\n        body: {\r\n            backgroundColor: theme.palette.common.white,\r\n        },\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function Login() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    AutenticaÃ§Ã£o\r\n        </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Senha\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                        label=\"Lembrar-me\"\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Logar\r\n                    </Button>\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                            <Link to=\"/recuperarsenha\">Perdeu sua senha?</Link>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Link to=\"/cadastro\">NÃ£o tem uma conta? Cadastrar</Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n    );\r\n}","import NumberFormat from 'react-number-format';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport React from 'react';\r\n\r\nexport default class Documento extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.name = props.name;\r\n    }\r\n\r\n    formatWithPattern = (numStr, format) => {\r\n\r\n        let returnValue = [];\r\n        let arrFormat = format.split('');\r\n        let count = 0;\r\n        for (var i = 0; i < arrFormat.length; i++) {\r\n\r\n            if (arrFormat[i] === '#') {\r\n\r\n                returnValue[i] = numStr[count];\r\n                count++;\r\n            } else {\r\n                returnValue[i] = format[i];\r\n            }\r\n\r\n            if (count === numStr.length) {\r\n                break\r\n            }\r\n        }\r\n\r\n        return returnValue.join('');\r\n    }\r\n\r\n    formatDocumento = (val) => {\r\n\r\n        let value = val.replace('[^0-9]', '');\r\n\r\n        if (value.length > 11) {\r\n\r\n            return this.formatWithPattern(value, '##.###.###/####-##');\r\n        }\r\n\r\n        return this.formatWithPattern(value, '###.###.###-##');\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <NumberFormat\r\n                customInput={TextField}\r\n                format={this.formatDocumento}\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                value={this.props.documento}\r\n                error={this.props.error}\r\n                onChange={this.props.onChange}\r\n                id=\"documento\"\r\n                label=\"CPF/CNPJ\"\r\n                name=\"documento\"\r\n                autoComplete=\"documento\"\r\n            />\r\n        )\r\n    }\r\n}","import axios from 'axios';\n\n\nconst api = axios.create({\n//    baseURL: 'http://localhost:3333/',\n    headers: { 'Content-Type': 'application/json' }\n});\n\n\n\nexport default api;","import React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport api from '../services/api';\r\n\r\nexport default class SelectRest extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.label = React.createRef();\r\n\r\n        this.state = {\r\n            data: [],\r\n            labelWidth: 100,\r\n            value: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n\r\n        let me = this;\r\n\r\n        this.setState({ labelWidth: this.label.current.clientWidth });\r\n\r\n        api.get(this.props.api, { data: {} }).then(result => { me.setState({ data: result.data }) });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ value: event.target.value });\r\n     \r\n        this.props.handleChange(event);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <InputLabel id={this.props.name + 'label'} ref={this.label}>\r\n                    {this.props.label}\r\n                </InputLabel>\r\n                <Select\r\n                    className=\"reactSelect\"\r\n                    labelId={this.props.name + 'label'}\r\n                    id={this.props.name + 'field'}\r\n                    required\r\n                    fullWidth\r\n                    inputRef={this.props.inputRef}\r\n                    error={this.props.error}\r\n                    value={this.state.value}\r\n                    labelWidth={this.state.labelWidth}\r\n                    onChange={this.handleChange}\r\n                >\r\n                    {\r\n                        this.state.data.map(function (item) {\r\n                            return (<MenuItem key={item.id} value={item.id}>{item.descricao}</MenuItem>)\r\n                        })\r\n                    }\r\n                </Select>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from '@material-ui/core/Container';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Documento from '../../components/documento'\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SelectRest from '../../components/select-rest';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  '@global': {\r\n    body: {\r\n      backgroundColor: theme.palette.common.white,\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\n\r\nexport default function Cadastro() {\r\n\r\n  const [state, setState] = React.useState({\r\n    estabelecimento: '',\r\n    nome: '',\r\n    documento: '',\r\n    email: '',\r\n    senha: ''\r\n  });\r\n\r\n  const [error, setError] = React.useState({\r\n    estabelecimento: true,\r\n    nome: true,\r\n    documento: true,\r\n    email: true,\r\n    senha: true,\r\n    mensagemestabelecimento: 'Campo obrigatÃ³rio',\r\n    mensagemnome: 'Campo obrigatÃ³rio',\r\n    mensagemdocumento: 'Campo obrigatÃ³rio',\r\n    mensagememail: 'Campo obrigatÃ³rio',\r\n    mensagemsenha: 'Campo obrigatÃ³rio',\r\n  });\r\n\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleSubmit = event => {\r\n    debugger\r\n    event.preventDefault();\r\n    console.log(event);\r\n  };\r\n\r\n  const options = [\r\n    { value: '1', label: 'Cabelereiro' },\r\n    { value: '2', label: 'Dentista' },\r\n    { value: '3', label: 'MÃ©dico' }\r\n  ]\r\n\r\n  function handleChange(name, value, fieldError, mensagem) {\r\n\r\n    setState({\r\n      ...state,\r\n      [name]: value,\r\n    });\r\n\r\n    setError({\r\n      ...error,\r\n      [name]: fieldError,\r\n      ['mensagem' + name]: mensagem,\r\n    });\r\n  };\r\n\r\n  const changeEstabelecimento = event => {\r\n  \r\n    let error = event.target.value === '';\r\n    let mensagem = error ? 'Campo obrigatÃ³rio' : '';\r\n\r\n    handleChange('estabelecimento', event.target.value, error, mensagem);\r\n  };\r\n\r\n  const changeDocumento = event => {\r\n    let error = event.target.value === '';\r\n    let mensagem = error ? 'Campo obrigatÃ³rio' : '';\r\n\r\n    handleChange('documento', event.target.value, error, mensagem);\r\n  };\r\n\r\n  const changeNome = event => {\r\n    let error = event.target.value === '';\r\n    let mensagem = error ? 'Campo obrigatÃ³rio' : '';\r\n\r\n    handleChange('nome', event.target.value, error, mensagem);\r\n  };\r\n  const changeEmail = event => {\r\n    let error = event.target.value === '';\r\n    let mensagem = error ? 'Campo obrigatÃ³rio' : '';\r\n\r\n    handleChange('email', event.target.value, error, mensagem);\r\n  };\r\n  const changeSenha = event => {\r\n    let error = event.target.value === '';\r\n    let mensagem = error ? 'Campo obrigatÃ³rio' : '';\r\n\r\n    handleChange('senha', event.target.value, error, mensagem);\r\n  };\r\n\r\n  return (\r\n\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Cadastro de Empresa\r\n        </Typography>\r\n        <Grid container spacing={2}>\r\n          <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n            <FormControl variant=\"outlined\" className={classes.form}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <SelectRest\r\n                    name='estamelecimento'\r\n                    label='Estabelecimento'\r\n                    value={state.estabelecimento}\r\n                    error={error.estabelecimento}\r\n                    handleChange={changeEstabelecimento}\r\n                    api='estabelecimento'\r\n                  />\r\n                  {error.estabelecimento && <FormHelperText>{error.mensagemestabelecimento}</FormHelperText>}\r\n                </Grid>\r\n                <Grid item xs={12} >\r\n                  <Documento\r\n                    value={state.documento}\r\n                    error={error.documento}\r\n                    onChange={changeDocumento}\r\n                  />\r\n                  {error.documento && <FormHelperText>{error.mensagemdocumento}</FormHelperText>}\r\n                </Grid>\r\n                <Grid item xs={12} >\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    name=\"nome\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"nome\"\r\n                    label=\"Nome\"\r\n                    autoComplete=\"nome\"\r\n                    value={state.nome}\r\n                    error={error.nome}\r\n                    onChange={changeNome}\r\n                  />\r\n                  {error.nome && <FormHelperText>{error.mensagemnome}</FormHelperText>}\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    autoComplete=\"email\"\r\n                    value={state.email}\r\n                    error={error.email}\r\n                    onChange={changeEmail}\r\n                  />\r\n                  {error.email && <FormHelperText>{error.mensagememail}</FormHelperText>}\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"senha\"\r\n                    label=\"Senha\"\r\n                    type=\"password\"\r\n                    id=\"senha\"\r\n                    autoComplete=\"current-password\"\r\n                    value={state.senha}\r\n                    error={error.senha}\r\n                    onChange={changeSenha}\r\n                  />\r\n                  {error.senha && <FormHelperText>{error.mensagemsenha}</FormHelperText>}\r\n                </Grid>\r\n              </Grid>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                disabled={(error.estabelecimento || error.nome || error.documento || error.email || error.senha)}\r\n                className={classes.submit}\r\n              >\r\n                Cadastrar\r\n          </Button>\r\n            </FormControl>\r\n          </form>\r\n        </Grid>\r\n      </div>\r\n    </Container>\r\n  );\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport RouterPage from './RouterPage';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<RouterPage />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n","import React from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Redirect,\r\n    Switch\r\n} from 'react-router-dom'\r\n\r\n\r\nimport Main from './pages/main/main'\r\nimport Login from './pages/login/login'\r\nimport Cadastro from './pages/cadastro/cadastro';\r\n\r\nexport default function RouterPage() {\r\n\r\n    const fakeAuth = {\r\n        isAuthenticated: false\r\n    };\r\n\r\n    function PrivateRoute({ children, ...rest }) {\r\n        return (\r\n            <Route {...rest} render={({ location }) => {\r\n                return fakeAuth.isAuthenticated ? (\r\n                    <Redirect to={{\r\n                        pathname: \"/dashboard\",\r\n                        state: { from: location }\r\n                    }} />\r\n                ) : (\r\n                        <Redirect to={{\r\n                            pathname: \"/login\",\r\n                            state: { from: location }\r\n                        }} />\r\n                    )\r\n            }\r\n            }\r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route path=\"/login\">\r\n                    <Login />\r\n                </Route>\r\n                <Route path=\"/cadastro\">\r\n                    <Cadastro />\r\n                </Route>\r\n                <Route path=\"/dashboard\">\r\n                    <Main />\r\n                </Route>\r\n                <PrivateRoute path=\"/\" />\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n"],"sourceRoot":""}
{"version":3,"sources":["pages/main/main.js","pages/copyright/copyright.js","pages/login/login.js","services/api.js","pages/cadastro/cadastro.js","serviceWorker.js","index.js","RouterPage.js"],"names":["Main","props","state","class","React","Component","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","body","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","secondary","main","form","width","submit","Login","classes","Container","component","maxWidth","CssBaseline","className","Avatar","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","type","FormControlLabel","control","Checkbox","value","Button","Grid","container","item","xs","to","Box","mt","api","axios","create","baseURL","headers","Cadastro","useState","estabelecimentos","setEstabelecimentos","inputLabel","useRef","labelWidth","setLabelWidth","useEffect","current","offsetWidth","get","data","then","result","FormControl","InputLabel","ref","Select","labelId","map","estabelecimento","MenuItem","descricao","justify","Boolean","window","location","hostname","match","ReactDOM","render","fakeAuth","isAuthenticated","path","children","rest","pathname","from","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.40c7d599.chunk.js","sourcesContent":["import React from 'react';\r\nexport default class Main extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"container\">\r\n\r\n                <div class=\"box\">\r\n\r\n                 \r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nexport default function Copyright() {\r\n\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Agenda Aqui\r\n      </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { Link } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Copyright from '../copyright/copyright';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    '@global': {\r\n        body: {\r\n            backgroundColor: theme.palette.common.white,\r\n        },\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function Login() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Autenticação\r\n        </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Senha\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                        label=\"Lembrar-me\"\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Logar\r\n          </Button>\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                            <Link href=\"#\" variant=\"body2\">\r\n                                Perdeu sua senha?\r\n              </Link>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Link to=\"/cadastro\">Não tem uma conta? Cadastrar</Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n    );\r\n}","import axios from 'axios';\n\n\nconst api = axios.create({\n    baseURL: 'http://localhost:3333/',\n    headers: { 'Content-Type': 'application/json' }\n});\n\n\n\nexport default api;","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Link } from 'react-router-dom'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Copyright from '../copyright/copyright';\r\nimport api from '../../services/api';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  '@global': {\r\n    body: {\r\n      backgroundColor: theme.palette.common.white,\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function Cadastro() {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [estabelecimentos, setEstabelecimentos] = React.useState([]);\r\n\r\n  const inputLabel = React.useRef(null);\r\n  const [labelWidth, setLabelWidth] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    setLabelWidth(inputLabel.current.offsetWidth);\r\n\r\n  }, []);\r\n\r\n\r\n  React.useEffect(() => {\r\n\r\n    api.get('estabelecimento', { data: {} }).then(result => {\r\n\r\n      if (result.data) {\r\n        setEstabelecimentos(result.data);\r\n      }\r\n    });\r\n\r\n  }, []);\r\n\r\n\r\n  return (\r\n\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Cadastro\r\n      </Typography>\r\n        <Grid container spacing={2}>\r\n\r\n          <FormControl variant=\"outlined\" className={classes.form}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <InputLabel ref={inputLabel} id=\"estabelecimento-label\">\r\n                  Estabelecimento\r\n        </InputLabel>\r\n                <Select\r\n                  labelId=\"estabelecimento-label\"\r\n                  id=\"estabelecimento\"\r\n                  required\r\n                  fullWidth\r\n                  labelWidth={labelWidth}\r\n                >\r\n                  {\r\n                    estabelecimentos.map(function (estabelecimento) {\r\n                      return (\r\n                        <MenuItem value={estabelecimento.id}>{estabelecimento.descricao}</MenuItem>\r\n                      )\r\n                    })\r\n                  }\r\n                </Select>\r\n              </Grid>\r\n              <Grid item xs={12} >\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"nome\"\r\n                  label=\"Nome\"\r\n                  name=\"nome\"\r\n                  autoComplete=\"nome\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} >\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"documento\"\r\n                  label=\"CPF/CNPJ\"\r\n                  name=\"documento\"\r\n                  autoComplete=\"documento\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"senha\"\r\n                  label=\"Senha\"\r\n                  type=\"password\"\r\n                  id=\"senha\"\r\n                  autoComplete=\"current-password\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Cadastrar\r\n          </Button>\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Link to=\"/login\"> Já tem uma conta? Entrar</Link>\r\n              </Grid>\r\n            </Grid>\r\n          </FormControl>\r\n        </Grid>\r\n\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport RouterPage from './RouterPage';\nimport index from './index.css';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<RouterPage />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n","import React from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Redirect,\r\n    Switch\r\n} from 'react-router-dom'\r\n\r\n\r\nimport Main from './pages/main/main'\r\nimport Login from './pages/login/login'\r\nimport Cadastro from './pages/cadastro/cadastro';\r\n\r\nexport default function RouterPage() {\r\n\r\n    const fakeAuth = {\r\n        isAuthenticated: false\r\n    };\r\n\r\n    function PrivateRoute({ children, ...rest }) {\r\n        return (\r\n            <Route {...rest} render={({ location }) => {\r\n                return fakeAuth.isAuthenticated ? (\r\n                    <Redirect to={{\r\n                        pathname: \"/dashboard\",\r\n                        state: { from: location }\r\n                    }} />\r\n                ) : (\r\n                        <Redirect to={{\r\n                            pathname: \"/login\",\r\n                            state: { from: location }\r\n                        }} />\r\n                    )\r\n            }\r\n            }\r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route path=\"/login\">\r\n                    <Login />\r\n                </Route>\r\n                <Route path=\"/cadastro\">\r\n                    <Cadastro />\r\n                </Route>\r\n                <Route path=\"/dashboard\">\r\n                    <Main />\r\n                </Route>\r\n                <PrivateRoute path=\"/\" />\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n"],"sourceRoot":""}